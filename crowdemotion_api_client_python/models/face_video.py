# coding: utf-8

"""
    CloudEmotion API v1

    CrowdEmotion API

    OpenAPI spec version: 1.1.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class FaceVideo(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id=None, time_created=None, filename=None, fq_avg=None, fq_stddev=None, frame_rate=None, num_frames=None, remote_location=None, status=None, status_text=None, status_message=None, response_id=None, md5=None, length_ms=None, length_s=None, frames_processed=None, processing_time=None, engine_version=None):
        """
        FaceVideo - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'id': 'int',
            'time_created': 'datetime',
            'filename': 'str',
            'fq_avg': 'int',
            'fq_stddev': 'int',
            'frame_rate': 'int',
            'num_frames': 'int',
            'remote_location': 'str',
            'status': 'int',
            'status_text': 'str',
            'status_message': 'str',
            'response_id': 'str',
            'md5': 'str',
            'length_ms': 'int',
            'length_s': 'float',
            'frames_processed': 'int',
            'processing_time': 'int',
            'engine_version': 'int'
        }

        self.attribute_map = {
            'id': 'id',
            'time_created': 'timeCreated',
            'filename': 'filename',
            'fq_avg': 'fqAvg',
            'fq_stddev': 'fqStddev',
            'frame_rate': 'frameRate',
            'num_frames': 'numFrames',
            'remote_location': 'remoteLocation',
            'status': 'status',
            'status_text': 'statusText',
            'status_message': 'statusMessage',
            'response_id': 'responseId',
            'md5': 'md5',
            'length_ms': 'lengthMS',
            'length_s': 'lengthS',
            'frames_processed': 'framesProcessed',
            'processing_time': 'processingTime',
            'engine_version': 'engineVersion'
        }

        self._id = id
        self._time_created = time_created
        self._filename = filename
        self._fq_avg = fq_avg
        self._fq_stddev = fq_stddev
        self._frame_rate = frame_rate
        self._num_frames = num_frames
        self._remote_location = remote_location
        self._status = status
        self._status_text = status_text
        self._status_message = status_message
        self._response_id = response_id
        self._md5 = md5
        self._length_ms = length_ms
        self._length_s = length_s
        self._frames_processed = frames_processed
        self._processing_time = processing_time
        self._engine_version = engine_version

    @property
    def id(self):
        """
        Gets the id of this FaceVideo.
        

        :return: The id of this FaceVideo.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this FaceVideo.
        

        :param id: The id of this FaceVideo.
        :type: int
        """

        self._id = id

    @property
    def time_created(self):
        """
        Gets the time_created of this FaceVideo.
        

        :return: The time_created of this FaceVideo.
        :rtype: datetime
        """
        return self._time_created

    @time_created.setter
    def time_created(self, time_created):
        """
        Sets the time_created of this FaceVideo.
        

        :param time_created: The time_created of this FaceVideo.
        :type: datetime
        """

        self._time_created = time_created

    @property
    def filename(self):
        """
        Gets the filename of this FaceVideo.
        

        :return: The filename of this FaceVideo.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """
        Sets the filename of this FaceVideo.
        

        :param filename: The filename of this FaceVideo.
        :type: str
        """

        self._filename = filename

    @property
    def fq_avg(self):
        """
        Gets the fq_avg of this FaceVideo.
        

        :return: The fq_avg of this FaceVideo.
        :rtype: int
        """
        return self._fq_avg

    @fq_avg.setter
    def fq_avg(self, fq_avg):
        """
        Sets the fq_avg of this FaceVideo.
        

        :param fq_avg: The fq_avg of this FaceVideo.
        :type: int
        """

        self._fq_avg = fq_avg

    @property
    def fq_stddev(self):
        """
        Gets the fq_stddev of this FaceVideo.
        

        :return: The fq_stddev of this FaceVideo.
        :rtype: int
        """
        return self._fq_stddev

    @fq_stddev.setter
    def fq_stddev(self, fq_stddev):
        """
        Sets the fq_stddev of this FaceVideo.
        

        :param fq_stddev: The fq_stddev of this FaceVideo.
        :type: int
        """

        self._fq_stddev = fq_stddev

    @property
    def frame_rate(self):
        """
        Gets the frame_rate of this FaceVideo.
        

        :return: The frame_rate of this FaceVideo.
        :rtype: int
        """
        return self._frame_rate

    @frame_rate.setter
    def frame_rate(self, frame_rate):
        """
        Sets the frame_rate of this FaceVideo.
        

        :param frame_rate: The frame_rate of this FaceVideo.
        :type: int
        """

        self._frame_rate = frame_rate

    @property
    def num_frames(self):
        """
        Gets the num_frames of this FaceVideo.
        

        :return: The num_frames of this FaceVideo.
        :rtype: int
        """
        return self._num_frames

    @num_frames.setter
    def num_frames(self, num_frames):
        """
        Sets the num_frames of this FaceVideo.
        

        :param num_frames: The num_frames of this FaceVideo.
        :type: int
        """

        self._num_frames = num_frames

    @property
    def remote_location(self):
        """
        Gets the remote_location of this FaceVideo.
        

        :return: The remote_location of this FaceVideo.
        :rtype: str
        """
        return self._remote_location

    @remote_location.setter
    def remote_location(self, remote_location):
        """
        Sets the remote_location of this FaceVideo.
        

        :param remote_location: The remote_location of this FaceVideo.
        :type: str
        """

        self._remote_location = remote_location

    @property
    def status(self):
        """
        Gets the status of this FaceVideo.
        

        :return: The status of this FaceVideo.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this FaceVideo.
        

        :param status: The status of this FaceVideo.
        :type: int
        """

        self._status = status

    @property
    def status_text(self):
        """
        Gets the status_text of this FaceVideo.
        

        :return: The status_text of this FaceVideo.
        :rtype: str
        """
        return self._status_text

    @status_text.setter
    def status_text(self, status_text):
        """
        Sets the status_text of this FaceVideo.
        

        :param status_text: The status_text of this FaceVideo.
        :type: str
        """

        self._status_text = status_text

    @property
    def status_message(self):
        """
        Gets the status_message of this FaceVideo.
        

        :return: The status_message of this FaceVideo.
        :rtype: str
        """
        return self._status_message

    @status_message.setter
    def status_message(self, status_message):
        """
        Sets the status_message of this FaceVideo.
        

        :param status_message: The status_message of this FaceVideo.
        :type: str
        """

        self._status_message = status_message

    @property
    def response_id(self):
        """
        Gets the response_id of this FaceVideo.
        

        :return: The response_id of this FaceVideo.
        :rtype: str
        """
        return self._response_id

    @response_id.setter
    def response_id(self, response_id):
        """
        Sets the response_id of this FaceVideo.
        

        :param response_id: The response_id of this FaceVideo.
        :type: str
        """

        self._response_id = response_id

    @property
    def md5(self):
        """
        Gets the md5 of this FaceVideo.
        

        :return: The md5 of this FaceVideo.
        :rtype: str
        """
        return self._md5

    @md5.setter
    def md5(self, md5):
        """
        Sets the md5 of this FaceVideo.
        

        :param md5: The md5 of this FaceVideo.
        :type: str
        """

        self._md5 = md5

    @property
    def length_ms(self):
        """
        Gets the length_ms of this FaceVideo.
        

        :return: The length_ms of this FaceVideo.
        :rtype: int
        """
        return self._length_ms

    @length_ms.setter
    def length_ms(self, length_ms):
        """
        Sets the length_ms of this FaceVideo.
        

        :param length_ms: The length_ms of this FaceVideo.
        :type: int
        """

        self._length_ms = length_ms

    @property
    def length_s(self):
        """
        Gets the length_s of this FaceVideo.
        

        :return: The length_s of this FaceVideo.
        :rtype: float
        """
        return self._length_s

    @length_s.setter
    def length_s(self, length_s):
        """
        Sets the length_s of this FaceVideo.
        

        :param length_s: The length_s of this FaceVideo.
        :type: float
        """

        self._length_s = length_s

    @property
    def frames_processed(self):
        """
        Gets the frames_processed of this FaceVideo.
        

        :return: The frames_processed of this FaceVideo.
        :rtype: int
        """
        return self._frames_processed

    @frames_processed.setter
    def frames_processed(self, frames_processed):
        """
        Sets the frames_processed of this FaceVideo.
        

        :param frames_processed: The frames_processed of this FaceVideo.
        :type: int
        """

        self._frames_processed = frames_processed

    @property
    def processing_time(self):
        """
        Gets the processing_time of this FaceVideo.
        

        :return: The processing_time of this FaceVideo.
        :rtype: int
        """
        return self._processing_time

    @processing_time.setter
    def processing_time(self, processing_time):
        """
        Sets the processing_time of this FaceVideo.
        

        :param processing_time: The processing_time of this FaceVideo.
        :type: int
        """

        self._processing_time = processing_time

    @property
    def engine_version(self):
        """
        Gets the engine_version of this FaceVideo.
        

        :return: The engine_version of this FaceVideo.
        :rtype: int
        """
        return self._engine_version

    @engine_version.setter
    def engine_version(self, engine_version):
        """
        Sets the engine_version of this FaceVideo.
        

        :param engine_version: The engine_version of this FaceVideo.
        :type: int
        """

        self._engine_version = engine_version

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
